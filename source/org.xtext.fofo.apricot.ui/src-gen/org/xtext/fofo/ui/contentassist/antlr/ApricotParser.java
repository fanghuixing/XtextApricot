/*
* generated by Xtext
*/
package org.xtext.fofo.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.fofo.services.ApricotGrammarAccess;

public class ApricotParser extends AbstractContentAssistParser {
	
	@Inject
	private ApricotGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.fofo.ui.contentassist.antlr.internal.InternalApricotParser createParser() {
		org.xtext.fofo.ui.contentassist.antlr.internal.InternalApricotParser result = new org.xtext.fofo.ui.contentassist.antlr.internal.InternalApricotParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getModifierAccess().getAlternatives(), "rule__Modifier__Alternatives");
					put(grammarAccess.getRefTypeAccess().getAlternatives(), "rule__RefType__Alternatives");
					put(grammarAccess.getNonRefTypeAccess().getAlternatives(), "rule__NonRefType__Alternatives");
					put(grammarAccess.getBasicTypeAccess().getBTAlternatives_0(), "rule__BasicType__BTAlternatives_0");
					put(grammarAccess.getMathTypeAccess().getMTAlternatives_0(), "rule__MathType__MTAlternatives_0");
					put(grammarAccess.getMemberAccess().getAlternatives(), "rule__Member__Alternatives");
					put(grammarAccess.getAbstractMethodAccess().getAlternatives(), "rule__AbstractMethod__Alternatives");
					put(grammarAccess.getUseTypeAccess().getAlternatives(), "rule__UseType__Alternatives");
					put(grammarAccess.getTypedElementAccess().getAlternatives(), "rule__TypedElement__Alternatives");
					put(grammarAccess.getVariableInitializerAccess().getAlternatives(), "rule__VariableInitializer__Alternatives");
					put(grammarAccess.getAMOUNTAccess().getAlternatives(), "rule__AMOUNT__Alternatives");
					put(grammarAccess.getAbstractInterfaceElementAccess().getAlternatives(), "rule__AbstractInterfaceElement__Alternatives");
					put(grammarAccess.getAssignmentOperatorAccess().getAlternatives(), "rule__AssignmentOperator__Alternatives");
					put(grammarAccess.getEqualityExpressionAccess().getAlternatives_1_0(), "rule__EqualityExpression__Alternatives_1_0");
					put(grammarAccess.getRelationalOpAccess().getAlternatives(), "rule__RelationalOp__Alternatives");
					put(grammarAccess.getAdditiveExpressionAccess().getAlternatives_1_0(), "rule__AdditiveExpression__Alternatives_1_0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getAlternatives_1_0(), "rule__MultiplicativeExpression__Alternatives_1_0");
					put(grammarAccess.getUnaryExpressionAccess().getAlternatives(), "rule__UnaryExpression__Alternatives");
					put(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getAlternatives_1(), "rule__UnaryExpressionNotPlusMinus__Alternatives_1");
					put(grammarAccess.getPrimaryAccess().getAlternatives_1(), "rule__Primary__Alternatives_1");
					put(grammarAccess.getIdentifierSuffixAccess().getAlternatives_1(), "rule__IdentifierSuffix__Alternatives_1");
					put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
					put(grammarAccess.getIntegerLiteralAccess().getAlternatives(), "rule__IntegerLiteral__Alternatives");
					put(grammarAccess.getBooleanLiteralAccess().getAlternatives(), "rule__BooleanLiteral__Alternatives");
					put(grammarAccess.getBuilt_In_MethodsAccess().getAlternatives(), "rule__Built_In_Methods__Alternatives");
					put(grammarAccess.getBlockStatementAccess().getAlternatives(), "rule__BlockStatement__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives_1(), "rule__Statement__Alternatives_1");
					put(grammarAccess.getForControlAccess().getAlternatives_1(), "rule__ForControl__Alternatives_1");
					put(grammarAccess.getControlSwitchCompositionAccess().getAlternatives_1_1(), "rule__ControlSwitchComposition__Alternatives_1_1");
					put(grammarAccess.getControlSwitchCompositionAccess().getAlternatives_1_3(), "rule__ControlSwitchComposition__Alternatives_1_3");
					put(grammarAccess.getControlSwitchCompositionAccess().getAlternatives_1_7(), "rule__ControlSwitchComposition__Alternatives_1_7");
					put(grammarAccess.getPackageDeclarationAccess().getGroup(), "rule__PackageDeclaration__Group__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup(), "rule__QualifiedNameWithWildcard__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getInterfaceAccess().getGroup(), "rule__Interface__Group__0");
					put(grammarAccess.getInterfaceAccess().getGroup_3(), "rule__Interface__Group_3__0");
					put(grammarAccess.getClassAccess().getGroup(), "rule__Class__Group__0");
					put(grammarAccess.getClassAccess().getGroup_3(), "rule__Class__Group_3__0");
					put(grammarAccess.getClassAccess().getGroup_4(), "rule__Class__Group_4__0");
					put(grammarAccess.getFieldAccess().getGroup(), "rule__Field__Group__0");
					put(grammarAccess.getFieldAccess().getGroup_5(), "rule__Field__Group_5__0");
					put(grammarAccess.getConstructorMethodAccess().getGroup(), "rule__ConstructorMethod__Group__0");
					put(grammarAccess.getConstructorMethodAccess().getGroup_2(), "rule__ConstructorMethod__Group_2__0");
					put(grammarAccess.getConstructorMethodAccess().getGroup_2_1(), "rule__ConstructorMethod__Group_2_1__0");
					put(grammarAccess.getMethodAccess().getGroup(), "rule__Method__Group__0");
					put(grammarAccess.getMethodAccess().getGroup_5(), "rule__Method__Group_5__0");
					put(grammarAccess.getMethodAccess().getGroup_5_1(), "rule__Method__Group_5_1__0");
					put(grammarAccess.getAbstractMethodAccess().getGroup_5(), "rule__AbstractMethod__Group_5__0");
					put(grammarAccess.getAbstractMethodAccess().getGroup_5_5(), "rule__AbstractMethod__Group_5_5__0");
					put(grammarAccess.getAbstractMethodAccess().getGroup_5_5_1(), "rule__AbstractMethod__Group_5_5_1__0");
					put(grammarAccess.getAbstractMethodAccess().getGroup_5_7(), "rule__AbstractMethod__Group_5_7__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getMethodBodyAccess().getGroup(), "rule__MethodBody__Group__0");
					put(grammarAccess.getVariableInitializerAccess().getGroup_1(), "rule__VariableInitializer__Group_1__0");
					put(grammarAccess.getReturnStatementAccess().getGroup(), "rule__ReturnStatement__Group__0");
					put(grammarAccess.getRequiresAccess().getGroup(), "rule__Requires__Group__0");
					put(grammarAccess.getAbstractDynamicSwitchAccess().getGroup(), "rule__AbstractDynamicSwitch__Group__0");
					put(grammarAccess.getAbstractDynamicSwitchAccess().getGroup_7(), "rule__AbstractDynamicSwitch__Group_7__0");
					put(grammarAccess.getAbstractDynamicSwitchAccess().getGroup_22(), "rule__AbstractDynamicSwitch__Group_22__0");
					put(grammarAccess.getABSTRACT_CONDTIONAccess().getGroup(), "rule__ABSTRACT_CONDTION__Group__0");
					put(grammarAccess.getAbstractCompositionMethodAccess().getGroup(), "rule__AbstractCompositionMethod__Group__0");
					put(grammarAccess.getNativeStartMethodAccess().getGroup(), "rule__NativeStartMethod__Group__0");
					put(grammarAccess.getRequiresAbstractCompositionAccess().getGroup(), "rule__RequiresAbstractComposition__Group__0");
					put(grammarAccess.getABSTRACT_DISCRETEAccess().getGroup(), "rule__ABSTRACT_DISCRETE__Group__0");
					put(grammarAccess.getClockConstraintAccess().getGroup(), "rule__ClockConstraint__Group__0");
					put(grammarAccess.getAbstractInvariantAccess().getGroup(), "rule__AbstractInvariant__Group__0");
					put(grammarAccess.getExpressionAccess().getGroup(), "rule__Expression__Group__0");
					put(grammarAccess.getExpressionAccess().getGroup_1(), "rule__Expression__Group_1__0");
					put(grammarAccess.getConditionalExpressionAccess().getGroup(), "rule__ConditionalExpression__Group__0");
					put(grammarAccess.getConditionalExpressionAccess().getGroup_1(), "rule__ConditionalExpression__Group_1__0");
					put(grammarAccess.getConditionalOrExpressionAccess().getGroup(), "rule__ConditionalOrExpression__Group__0");
					put(grammarAccess.getConditionalOrExpressionAccess().getGroup_1(), "rule__ConditionalOrExpression__Group_1__0");
					put(grammarAccess.getConditionalAndExpressionAccess().getGroup(), "rule__ConditionalAndExpression__Group__0");
					put(grammarAccess.getConditionalAndExpressionAccess().getGroup_1(), "rule__ConditionalAndExpression__Group_1__0");
					put(grammarAccess.getExclusiveOrExpressionAccess().getGroup(), "rule__ExclusiveOrExpression__Group__0");
					put(grammarAccess.getExclusiveOrExpressionAccess().getGroup_1(), "rule__ExclusiveOrExpression__Group_1__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup(), "rule__EqualityExpression__Group__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup_1(), "rule__EqualityExpression__Group_1__0");
					put(grammarAccess.getInstanceOfExpressionAccess().getGroup(), "rule__InstanceOfExpression__Group__0");
					put(grammarAccess.getInstanceOfExpressionAccess().getGroup_1(), "rule__InstanceOfExpression__Group_1__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup(), "rule__RelationalExpression__Group__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1(), "rule__RelationalExpression__Group_1__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup(), "rule__AdditiveExpression__Group__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_1(), "rule__AdditiveExpression__Group_1__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup(), "rule__MultiplicativeExpression__Group__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1(), "rule__MultiplicativeExpression__Group_1__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_0(), "rule__UnaryExpression__Group_0__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_1(), "rule__UnaryExpression__Group_1__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_2(), "rule__UnaryExpression__Group_2__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_3(), "rule__UnaryExpression__Group_3__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_4(), "rule__UnaryExpression__Group_4__0");
					put(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getGroup(), "rule__UnaryExpressionNotPlusMinus__Group__0");
					put(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getGroup_1_0(), "rule__UnaryExpressionNotPlusMinus__Group_1_0__0");
					put(grammarAccess.getPrimaryAccess().getGroup(), "rule__Primary__Group__0");
					put(grammarAccess.getPrimaryAccess().getGroup_1_4(), "rule__Primary__Group_1_4__0");
					put(grammarAccess.getPrimaryAccess().getGroup_1_4_1(), "rule__Primary__Group_1_4_1__0");
					put(grammarAccess.getPrimaryAccess().getGroup_1_5(), "rule__Primary__Group_1_5__0");
					put(grammarAccess.getPrimaryAccess().getGroup_1_5_2(), "rule__Primary__Group_1_5_2__0");
					put(grammarAccess.getIdentifierSuffixAccess().getGroup(), "rule__IdentifierSuffix__Group__0");
					put(grammarAccess.getIdentifierSuffixAccess().getGroup_1_0(), "rule__IdentifierSuffix__Group_1_0__0");
					put(grammarAccess.getIdentifierSuffixAccess().getGroup_1_0_0(), "rule__IdentifierSuffix__Group_1_0_0__0");
					put(grammarAccess.getIdentifierSuffixAccess().getGroup_1_2(), "rule__IdentifierSuffix__Group_1_2__0");
					put(grammarAccess.getIdentifierSuffixAccess().getGroup_1_3(), "rule__IdentifierSuffix__Group_1_3__0");
					put(grammarAccess.getIdentifierSuffixAccess().getGroup_1_4(), "rule__IdentifierSuffix__Group_1_4__0");
					put(grammarAccess.getIdentifierSuffixAccess().getGroup_1_5(), "rule__IdentifierSuffix__Group_1_5__0");
					put(grammarAccess.getIdentifierSuffixAccess().getGroup_1_6(), "rule__IdentifierSuffix__Group_1_6__0");
					put(grammarAccess.getIdentifierSuffixAccess().getGroup_1_7(), "rule__IdentifierSuffix__Group_1_7__0");
					put(grammarAccess.getArgumentsAccess().getGroup(), "rule__Arguments__Group__0");
					put(grammarAccess.getExpressionListAccess().getGroup(), "rule__ExpressionList__Group__0");
					put(grammarAccess.getExpressionListAccess().getGroup_1(), "rule__ExpressionList__Group_1__0");
					put(grammarAccess.getCastExpressionAccess().getGroup(), "rule__CastExpression__Group__0");
					put(grammarAccess.getParExpressionAccess().getGroup(), "rule__ParExpression__Group__0");
					put(grammarAccess.getParExpressionAccess().getGroup_2(), "rule__ParExpression__Group_2__0");
					put(grammarAccess.getLiteralAccess().getGroup_0(), "rule__Literal__Group_0__0");
					put(grammarAccess.getLiteralAccess().getGroup_1(), "rule__Literal__Group_1__0");
					put(grammarAccess.getLiteralAccess().getGroup_2(), "rule__Literal__Group_2__0");
					put(grammarAccess.getLiteralAccess().getGroup_3(), "rule__Literal__Group_3__0");
					put(grammarAccess.getLiteralAccess().getGroup_4(), "rule__Literal__Group_4__0");
					put(grammarAccess.getLiteralAccess().getGroup_5(), "rule__Literal__Group_5__0");
					put(grammarAccess.getLiteralAccess().getGroup_6(), "rule__Literal__Group_6__0");
					put(grammarAccess.getDE_LHSAccess().getGroup(), "rule__DE_LHS__Group__0");
					put(grammarAccess.getDE_LHSAccess().getGroup_3(), "rule__DE_LHS__Group_3__0");
					put(grammarAccess.getDifferentialEquationAccess().getGroup(), "rule__DifferentialEquation__Group__0");
					put(grammarAccess.getContinuousMethodAccess().getGroup(), "rule__ContinuousMethod__Group__0");
					put(grammarAccess.getContinuousMethodAccess().getGroup_6(), "rule__ContinuousMethod__Group_6__0");
					put(grammarAccess.getAbstractContinuousMethodAccess().getGroup(), "rule__AbstractContinuousMethod__Group__0");
					put(grammarAccess.getSqrtAccess().getGroup(), "rule__Sqrt__Group__0");
					put(grammarAccess.getSinAccess().getGroup(), "rule__Sin__Group__0");
					put(grammarAccess.getCosAccess().getGroup(), "rule__Cos__Group__0");
					put(grammarAccess.getTanAccess().getGroup(), "rule__Tan__Group__0");
					put(grammarAccess.getCotAccess().getGroup(), "rule__Cot__Group__0");
					put(grammarAccess.getSecAccess().getGroup(), "rule__Sec__Group__0");
					put(grammarAccess.getCscAccess().getGroup(), "rule__Csc__Group__0");
					put(grammarAccess.getRoundAccess().getGroup(), "rule__Round__Group__0");
					put(grammarAccess.getFloorAccess().getGroup(), "rule__Floor__Group__0");
					put(grammarAccess.getCeilAccess().getGroup(), "rule__Ceil__Group__0");
					put(grammarAccess.getDivAccess().getGroup(), "rule__Div__Group__0");
					put(grammarAccess.getFldAccess().getGroup(), "rule__Fld__Group__0");
					put(grammarAccess.getRemAccess().getGroup(), "rule__Rem__Group__0");
					put(grammarAccess.getModAccess().getGroup(), "rule__Mod__Group__0");
					put(grammarAccess.getGcdAccess().getGroup(), "rule__Gcd__Group__0");
					put(grammarAccess.getGcdAccess().getGroup_3(), "rule__Gcd__Group_3__0");
					put(grammarAccess.getLcmAccess().getGroup(), "rule__Lcm__Group__0");
					put(grammarAccess.getLcmAccess().getGroup_3(), "rule__Lcm__Group_3__0");
					put(grammarAccess.getAbsAccess().getGroup(), "rule__Abs__Group__0");
					put(grammarAccess.getSignAccess().getGroup(), "rule__Sign__Group__0");
					put(grammarAccess.getRootAccess().getGroup(), "rule__Root__Group__0");
					put(grammarAccess.getHypotAccess().getGroup(), "rule__Hypot__Group__0");
					put(grammarAccess.getPowAccess().getGroup(), "rule__Pow__Group__0");
					put(grammarAccess.getExpAccess().getGroup(), "rule__Exp__Group__0");
					put(grammarAccess.getLogAccess().getGroup(), "rule__Log__Group__0");
					put(grammarAccess.getLogAccess().getGroup_3(), "rule__Log__Group_3__0");
					put(grammarAccess.getErfAccess().getGroup(), "rule__Erf__Group__0");
					put(grammarAccess.getGammaAccess().getGroup(), "rule__Gamma__Group__0");
					put(grammarAccess.getMaxAccess().getGroup(), "rule__Max__Group__0");
					put(grammarAccess.getMaxAccess().getGroup_3(), "rule__Max__Group_3__0");
					put(grammarAccess.getMinAccess().getGroup(), "rule__Min__Group__0");
					put(grammarAccess.getMinAccess().getGroup_3(), "rule__Min__Group_3__0");
					put(grammarAccess.getPauseAccess().getGroup(), "rule__Pause__Group__0");
					put(grammarAccess.getSizeAccess().getGroup(), "rule__Size__Group__0");
					put(grammarAccess.getInvariantBlockAccess().getGroup(), "rule__InvariantBlock__Group__0");
					put(grammarAccess.getInvariantBlockAccess().getGroup_2(), "rule__InvariantBlock__Group_2__0");
					put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
					put(grammarAccess.getLocalVarDecStatementAccess().getGroup(), "rule__LocalVarDecStatement__Group__0");
					put(grammarAccess.getLocalVarDecAccess().getGroup(), "rule__LocalVarDec__Group__0");
					put(grammarAccess.getLocalVarDecAccess().getGroup_4(), "rule__LocalVarDec__Group_4__0");
					put(grammarAccess.getStatementAccess().getGroup(), "rule__Statement__Group__0");
					put(grammarAccess.getStatementAccess().getGroup_1_1(), "rule__Statement__Group_1_1__0");
					put(grammarAccess.getStatementAccess().getGroup_1_1_3(), "rule__Statement__Group_1_1_3__0");
					put(grammarAccess.getStatementAccess().getGroup_1_2(), "rule__Statement__Group_1_2__0");
					put(grammarAccess.getStatementAccess().getGroup_1_3(), "rule__Statement__Group_1_3__0");
					put(grammarAccess.getStatementAccess().getGroup_1_4(), "rule__Statement__Group_1_4__0");
					put(grammarAccess.getStatementAccess().getGroup_1_5(), "rule__Statement__Group_1_5__0");
					put(grammarAccess.getStatementAccess().getGroup_1_7(), "rule__Statement__Group_1_7__0");
					put(grammarAccess.getForControlAccess().getGroup(), "rule__ForControl__Group__0");
					put(grammarAccess.getForControlAccess().getGroup_1_1(), "rule__ForControl__Group_1_1__0");
					put(grammarAccess.getEnhancedForControlAccess().getGroup(), "rule__EnhancedForControl__Group__0");
					put(grammarAccess.getCompositionMethodAccess().getGroup(), "rule__CompositionMethod__Group__0");
					put(grammarAccess.getControlSwitchCompositionAccess().getGroup(), "rule__ControlSwitchComposition__Group__0");
					put(grammarAccess.getControlSwitchCompositionAccess().getGroup_1(), "rule__ControlSwitchComposition__Group_1__0");
					put(grammarAccess.getControlSwitchCompositionAccess().getGroup_1_1_0(), "rule__ControlSwitchComposition__Group_1_1_0__0");
					put(grammarAccess.getControlSwitchCompositionAccess().getGroup_1_3_1(), "rule__ControlSwitchComposition__Group_1_3_1__0");
					put(grammarAccess.getControlSwitchCompositionAccess().getGroup_1_7_1(), "rule__ControlSwitchComposition__Group_1_7_1__0");
					put(grammarAccess.getDiscreteBlockAccess().getGroup(), "rule__DiscreteBlock__Group__0");
					put(grammarAccess.getConditionBlockAccess().getGroup(), "rule__ConditionBlock__Group__0");
					put(grammarAccess.getConditionBlockAccess().getGroup_2(), "rule__ConditionBlock__Group_2__0");
					put(grammarAccess.getDiscreteMethodAccess().getGroup(), "rule__DiscreteMethod__Group__0");
					put(grammarAccess.getDiscreteMethodAccess().getGroup_3(), "rule__DiscreteMethod__Group_3__0");
					put(grammarAccess.getDiscreteMethodAccess().getGroup_3_1(), "rule__DiscreteMethod__Group_3_1__0");
					put(grammarAccess.getAbstractDiscreteMethodAccess().getGroup(), "rule__AbstractDiscreteMethod__Group__0");
					put(grammarAccess.getAbstractDiscreteMethodAccess().getGroup_3(), "rule__AbstractDiscreteMethod__Group_3__0");
					put(grammarAccess.getAbstractDiscreteMethodAccess().getGroup_3_1(), "rule__AbstractDiscreteMethod__Group_3_1__0");
					put(grammarAccess.getInitMethodAccess().getGroup(), "rule__InitMethod__Group__0");
					put(grammarAccess.getAbstractInitMethodAccess().getGroup(), "rule__AbstractInitMethod__Group__0");
					put(grammarAccess.getNewByClassAccess().getGroup(), "rule__NewByClass__Group__0");
					put(grammarAccess.getNewByClassAccess().getGroup_3(), "rule__NewByClass__Group_3__0");
					put(grammarAccess.getNewByClassAccess().getGroup_3_1(), "rule__NewByClass__Group_3_1__0");
					put(grammarAccess.getNewArrayAccess().getGroup(), "rule__NewArray__Group__0");
					put(grammarAccess.getDimExprAccess().getGroup(), "rule__DimExpr__Group__0");
					put(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1(), "rule__PackageDeclaration__NameAssignment_1");
					put(grammarAccess.getPackageDeclarationAccess().getImportsAssignment_3(), "rule__PackageDeclaration__ImportsAssignment_3");
					put(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_4(), "rule__PackageDeclaration__ElementsAssignment_4");
					put(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1(), "rule__Import__ImportedNamespaceAssignment_1");
					put(grammarAccess.getBasicTypeAccess().getBTAssignment(), "rule__BasicType__BTAssignment");
					put(grammarAccess.getMathTypeAccess().getMTAssignment(), "rule__MathType__MTAssignment");
					put(grammarAccess.getInterfaceAccess().getNameAssignment_2(), "rule__Interface__NameAssignment_2");
					put(grammarAccess.getInterfaceAccess().getSuperclassAssignment_3_1(), "rule__Interface__SuperclassAssignment_3_1");
					put(grammarAccess.getInterfaceAccess().getMembersAssignment_5(), "rule__Interface__MembersAssignment_5");
					put(grammarAccess.getClassAccess().getNameAssignment_2(), "rule__Class__NameAssignment_2");
					put(grammarAccess.getClassAccess().getSuperclassAssignment_3_1(), "rule__Class__SuperclassAssignment_3_1");
					put(grammarAccess.getClassAccess().getInterfaceclassAssignment_4_1(), "rule__Class__InterfaceclassAssignment_4_1");
					put(grammarAccess.getClassAccess().getMembersAssignment_6(), "rule__Class__MembersAssignment_6");
					put(grammarAccess.getFieldAccess().getAccessmodiferAssignment_0(), "rule__Field__AccessmodiferAssignment_0");
					put(grammarAccess.getFieldAccess().getVariablemodiferAssignment_1(), "rule__Field__VariablemodiferAssignment_1");
					put(grammarAccess.getFieldAccess().getTypeAssignment_2(), "rule__Field__TypeAssignment_2");
					put(grammarAccess.getFieldAccess().getDimAssignment_3(), "rule__Field__DimAssignment_3");
					put(grammarAccess.getFieldAccess().getNameAssignment_4(), "rule__Field__NameAssignment_4");
					put(grammarAccess.getFieldAccess().getVariniAssignment_5_1(), "rule__Field__VariniAssignment_5_1");
					put(grammarAccess.getConstructorMethodAccess().getNameAssignment_0(), "rule__ConstructorMethod__NameAssignment_0");
					put(grammarAccess.getConstructorMethodAccess().getParamsAssignment_2_0(), "rule__ConstructorMethod__ParamsAssignment_2_0");
					put(grammarAccess.getConstructorMethodAccess().getParamsAssignment_2_1_1(), "rule__ConstructorMethod__ParamsAssignment_2_1_1");
					put(grammarAccess.getConstructorMethodAccess().getBodyAssignment_5(), "rule__ConstructorMethod__BodyAssignment_5");
					put(grammarAccess.getMethodAccess().getTypeAssignment_1(), "rule__Method__TypeAssignment_1");
					put(grammarAccess.getMethodAccess().getDimAssignment_2(), "rule__Method__DimAssignment_2");
					put(grammarAccess.getMethodAccess().getNameAssignment_3(), "rule__Method__NameAssignment_3");
					put(grammarAccess.getMethodAccess().getParamsAssignment_5_0(), "rule__Method__ParamsAssignment_5_0");
					put(grammarAccess.getMethodAccess().getParamsAssignment_5_1_1(), "rule__Method__ParamsAssignment_5_1_1");
					put(grammarAccess.getMethodAccess().getBodyAssignment_8(), "rule__Method__BodyAssignment_8");
					put(grammarAccess.getAbstractMethodAccess().getTypeAssignment_5_2(), "rule__AbstractMethod__TypeAssignment_5_2");
					put(grammarAccess.getAbstractMethodAccess().getNameAssignment_5_3(), "rule__AbstractMethod__NameAssignment_5_3");
					put(grammarAccess.getAbstractMethodAccess().getParamsAssignment_5_5_0(), "rule__AbstractMethod__ParamsAssignment_5_5_0");
					put(grammarAccess.getAbstractMethodAccess().getParamsAssignment_5_5_1_1(), "rule__AbstractMethod__ParamsAssignment_5_5_1_1");
					put(grammarAccess.getAbstractMethodAccess().getBodyAssignment_5_7_1(), "rule__AbstractMethod__BodyAssignment_5_7_1");
					put(grammarAccess.getUseTypeAccess().getReftypeAssignment_0(), "rule__UseType__ReftypeAssignment_0");
					put(grammarAccess.getUseTypeAccess().getTypeAssignment_1(), "rule__UseType__TypeAssignment_1");
					put(grammarAccess.getParameterAccess().getTypeAssignment_0(), "rule__Parameter__TypeAssignment_0");
					put(grammarAccess.getParameterAccess().getDimAssignment_1(), "rule__Parameter__DimAssignment_1");
					put(grammarAccess.getParameterAccess().getNameAssignment_2(), "rule__Parameter__NameAssignment_2");
					put(grammarAccess.getMethodBodyAccess().getStatementsAssignment_1(), "rule__MethodBody__StatementsAssignment_1");
					put(grammarAccess.getReturnStatementAccess().getExpressionAssignment_1(), "rule__ReturnStatement__ExpressionAssignment_1");
					put(grammarAccess.getRequiresAccess().getNameAssignment_1(), "rule__Requires__NameAssignment_1");
					put(grammarAccess.getRequiresAccess().getTypeAssignment_6(), "rule__Requires__TypeAssignment_6");
					put(grammarAccess.getAbstractDynamicSwitchAccess().getSnameAssignment_1(), "rule__AbstractDynamicSwitch__SnameAssignment_1");
					put(grammarAccess.getAbstractDynamicSwitchAccess().getType1Assignment_6(), "rule__AbstractDynamicSwitch__Type1Assignment_6");
					put(grammarAccess.getAbstractDynamicSwitchAccess().getType2Assignment_7_1(), "rule__AbstractDynamicSwitch__Type2Assignment_7_1");
					put(grammarAccess.getAbstractDynamicSwitchAccess().getAnameAssignment_9(), "rule__AbstractDynamicSwitch__AnameAssignment_9");
					put(grammarAccess.getAbstractDynamicSwitchAccess().getType3Assignment_14(), "rule__AbstractDynamicSwitch__Type3Assignment_14");
					put(grammarAccess.getAbstractDynamicSwitchAccess().getDnameAssignment_16(), "rule__AbstractDynamicSwitch__DnameAssignment_16");
					put(grammarAccess.getAbstractDynamicSwitchAccess().getType4Assignment_21(), "rule__AbstractDynamicSwitch__Type4Assignment_21");
					put(grammarAccess.getAbstractDynamicSwitchAccess().getType5Assignment_22_1(), "rule__AbstractDynamicSwitch__Type5Assignment_22_1");
					put(grammarAccess.getAbstractCompositionMethodAccess().getNameAssignment_1(), "rule__AbstractCompositionMethod__NameAssignment_1");
					put(grammarAccess.getAbstractCompositionMethodAccess().getRacAssignment_5(), "rule__AbstractCompositionMethod__RacAssignment_5");
					put(grammarAccess.getNativeStartMethodAccess().getNameAssignment_2(), "rule__NativeStartMethod__NameAssignment_2");
					put(grammarAccess.getRequiresAbstractCompositionAccess().getNameAssignment_1(), "rule__RequiresAbstractComposition__NameAssignment_1");
					put(grammarAccess.getRequiresAbstractCompositionAccess().getAbstract_dynamic_switchAssignment_10(), "rule__RequiresAbstractComposition__Abstract_dynamic_switchAssignment_10");
					put(grammarAccess.getClockConstraintAccess().getNameAssignment_2(), "rule__ClockConstraint__NameAssignment_2");
					put(grammarAccess.getAbstractInvariantAccess().getNameAssignment_1(), "rule__AbstractInvariant__NameAssignment_1");
					put(grammarAccess.getExpressionAccess().getAssignmentoperatorAssignment_1_0(), "rule__Expression__AssignmentoperatorAssignment_1_0");
					put(grammarAccess.getExpressionAccess().getExpressionAssignment_1_1(), "rule__Expression__ExpressionAssignment_1_1");
					put(grammarAccess.getConditionalExpressionAccess().getConditionalorexpressionAssignment_0(), "rule__ConditionalExpression__ConditionalorexpressionAssignment_0");
					put(grammarAccess.getConditionalExpressionAccess().getExpression1Assignment_1_1(), "rule__ConditionalExpression__Expression1Assignment_1_1");
					put(grammarAccess.getConditionalExpressionAccess().getExpression2Assignment_1_3(), "rule__ConditionalExpression__Expression2Assignment_1_3");
					put(grammarAccess.getConditionalOrExpressionAccess().getConditionalandexpressionAssignment_0(), "rule__ConditionalOrExpression__ConditionalandexpressionAssignment_0");
					put(grammarAccess.getConditionalOrExpressionAccess().getConditionalandexpressionAssignment_1_1(), "rule__ConditionalOrExpression__ConditionalandexpressionAssignment_1_1");
					put(grammarAccess.getConditionalAndExpressionAccess().getExclusiveorexpressionAssignment_0(), "rule__ConditionalAndExpression__ExclusiveorexpressionAssignment_0");
					put(grammarAccess.getConditionalAndExpressionAccess().getExclusiveorexpressionAssignment_1_1(), "rule__ConditionalAndExpression__ExclusiveorexpressionAssignment_1_1");
					put(grammarAccess.getExclusiveOrExpressionAccess().getEqualityexpressionAssignment_0(), "rule__ExclusiveOrExpression__EqualityexpressionAssignment_0");
					put(grammarAccess.getExclusiveOrExpressionAccess().getEqualityexpressionAssignment_1_1(), "rule__ExclusiveOrExpression__EqualityexpressionAssignment_1_1");
					put(grammarAccess.getEqualityExpressionAccess().getInstanceofexpressionAssignment_0(), "rule__EqualityExpression__InstanceofexpressionAssignment_0");
					put(grammarAccess.getEqualityExpressionAccess().getInstanceofexpressionAssignment_1_1(), "rule__EqualityExpression__InstanceofexpressionAssignment_1_1");
					put(grammarAccess.getInstanceOfExpressionAccess().getLeftAssignment_0(), "rule__InstanceOfExpression__LeftAssignment_0");
					put(grammarAccess.getInstanceOfExpressionAccess().getTypeAssignment_1_1(), "rule__InstanceOfExpression__TypeAssignment_1_1");
					put(grammarAccess.getRelationalExpressionAccess().getAdditiveexpressionAssignment_0(), "rule__RelationalExpression__AdditiveexpressionAssignment_0");
					put(grammarAccess.getRelationalExpressionAccess().getRelationalopAssignment_1_0(), "rule__RelationalExpression__RelationalopAssignment_1_0");
					put(grammarAccess.getRelationalExpressionAccess().getAdditiveexpressionAssignment_1_1(), "rule__RelationalExpression__AdditiveexpressionAssignment_1_1");
					put(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeexpressionAssignment_0(), "rule__AdditiveExpression__MultiplicativeexpressionAssignment_0");
					put(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeexpressionAssignment_1_1(), "rule__AdditiveExpression__MultiplicativeexpressionAssignment_1_1");
					put(grammarAccess.getMultiplicativeExpressionAccess().getUnaryexpressionAssignment_0(), "rule__MultiplicativeExpression__UnaryexpressionAssignment_0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getUnaryexpressionAssignment_1_1(), "rule__MultiplicativeExpression__UnaryexpressionAssignment_1_1");
					put(grammarAccess.getUnaryExpressionAccess().getFromAssignment_4_1(), "rule__UnaryExpression__FromAssignment_4_1");
					put(grammarAccess.getUnaryExpressionAccess().getToAssignment_4_3(), "rule__UnaryExpression__ToAssignment_4_3");
					put(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getUnaryexpressionAssignment_1_0_1(), "rule__UnaryExpressionNotPlusMinus__UnaryexpressionAssignment_1_0_1");
					put(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getCastexpressionAssignment_1_1(), "rule__UnaryExpressionNotPlusMinus__CastexpressionAssignment_1_1");
					put(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getPrimaryAssignment_1_2(), "rule__UnaryExpressionNotPlusMinus__PrimaryAssignment_1_2");
					put(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getBuiltinAssignment_1_3(), "rule__UnaryExpressionNotPlusMinus__BuiltinAssignment_1_3");
					put(grammarAccess.getPrimaryAccess().getParexpressionAssignment_1_0(), "rule__Primary__ParexpressionAssignment_1_0");
					put(grammarAccess.getPrimaryAccess().getLiteralAssignment_1_1(), "rule__Primary__LiteralAssignment_1_1");
					put(grammarAccess.getPrimaryAccess().getNewobjectAssignment_1_2(), "rule__Primary__NewobjectAssignment_1_2");
					put(grammarAccess.getPrimaryAccess().getNewarrayAssignment_1_3(), "rule__Primary__NewarrayAssignment_1_3");
					put(grammarAccess.getPrimaryAccess().getIdentifierAssignment_1_4_1_1(), "rule__Primary__IdentifierAssignment_1_4_1_1");
					put(grammarAccess.getPrimaryAccess().getDimerAssignment_1_4_1_2(), "rule__Primary__DimerAssignment_1_4_1_2");
					put(grammarAccess.getPrimaryAccess().getIdentifiersuffixAssignment_1_4_2(), "rule__Primary__IdentifiersuffixAssignment_1_4_2");
					put(grammarAccess.getPrimaryAccess().getIdentifierAssignment_1_5_0(), "rule__Primary__IdentifierAssignment_1_5_0");
					put(grammarAccess.getPrimaryAccess().getDimerAssignment_1_5_1(), "rule__Primary__DimerAssignment_1_5_1");
					put(grammarAccess.getPrimaryAccess().getIdentifierAssignment_1_5_2_1(), "rule__Primary__IdentifierAssignment_1_5_2_1");
					put(grammarAccess.getPrimaryAccess().getDimerAssignment_1_5_2_2(), "rule__Primary__DimerAssignment_1_5_2_2");
					put(grammarAccess.getPrimaryAccess().getIdentifiersuffixAssignment_1_5_3(), "rule__Primary__IdentifiersuffixAssignment_1_5_3");
					put(grammarAccess.getIdentifierSuffixAccess().getArgumentsAssignment_1_1(), "rule__IdentifierSuffix__ArgumentsAssignment_1_1");
					put(grammarAccess.getIdentifierSuffixAccess().getArgumentsAssignment_1_4_2(), "rule__IdentifierSuffix__ArgumentsAssignment_1_4_2");
					put(grammarAccess.getIdentifierSuffixAccess().getGetvalueAssignment_1_5_1(), "rule__IdentifierSuffix__GetvalueAssignment_1_5_1");
					put(grammarAccess.getIdentifierSuffixAccess().getArgumentsAssignment_1_5_2(), "rule__IdentifierSuffix__ArgumentsAssignment_1_5_2");
					put(grammarAccess.getArgumentsAccess().getExpressionlistAssignment_2(), "rule__Arguments__ExpressionlistAssignment_2");
					put(grammarAccess.getExpressionListAccess().getExpression1Assignment_0(), "rule__ExpressionList__Expression1Assignment_0");
					put(grammarAccess.getExpressionListAccess().getExpression2Assignment_1_1(), "rule__ExpressionList__Expression2Assignment_1_1");
					put(grammarAccess.getCastExpressionAccess().getTypeAssignment_2(), "rule__CastExpression__TypeAssignment_2");
					put(grammarAccess.getCastExpressionAccess().getExpressionAssignment_4(), "rule__CastExpression__ExpressionAssignment_4");
					put(grammarAccess.getParExpressionAccess().getExpression1Assignment_1(), "rule__ParExpression__Expression1Assignment_1");
					put(grammarAccess.getParExpressionAccess().getExpression2Assignment_2_1(), "rule__ParExpression__Expression2Assignment_2_1");
					put(grammarAccess.getLiteralAccess().getValueAssignment_0_1(), "rule__Literal__ValueAssignment_0_1");
					put(grammarAccess.getLiteralAccess().getValueAssignment_1_1(), "rule__Literal__ValueAssignment_1_1");
					put(grammarAccess.getLiteralAccess().getValueAssignment_2_1(), "rule__Literal__ValueAssignment_2_1");
					put(grammarAccess.getLiteralAccess().getValueAssignment_3_1(), "rule__Literal__ValueAssignment_3_1");
					put(grammarAccess.getLiteralAccess().getValueAssignment_4_1(), "rule__Literal__ValueAssignment_4_1");
					put(grammarAccess.getLiteralAccess().getValueAssignment_5_1(), "rule__Literal__ValueAssignment_5_1");
					put(grammarAccess.getLiteralAccess().getValueAssignment_6_1(), "rule__Literal__ValueAssignment_6_1");
					put(grammarAccess.getDE_LHSAccess().getVar1Assignment_2(), "rule__DE_LHS__Var1Assignment_2");
					put(grammarAccess.getDE_LHSAccess().getVar2Assignment_3_1(), "rule__DE_LHS__Var2Assignment_3_1");
					put(grammarAccess.getDE_LHSAccess().getOrderAssignment_5(), "rule__DE_LHS__OrderAssignment_5");
					put(grammarAccess.getDifferentialEquationAccess().getLHSAssignment_2(), "rule__DifferentialEquation__LHSAssignment_2");
					put(grammarAccess.getDifferentialEquationAccess().getRHSAssignment_4(), "rule__DifferentialEquation__RHSAssignment_4");
					put(grammarAccess.getContinuousMethodAccess().getNameAssignment_2(), "rule__ContinuousMethod__NameAssignment_2");
					put(grammarAccess.getContinuousMethodAccess().getDESAssignment_6_0(), "rule__ContinuousMethod__DESAssignment_6_0");
					put(grammarAccess.getAbstractContinuousMethodAccess().getNameAssignment_2(), "rule__AbstractContinuousMethod__NameAssignment_2");
					put(grammarAccess.getSqrtAccess().getBuiltInNameAssignment_0(), "rule__Sqrt__BuiltInNameAssignment_0");
					put(grammarAccess.getSqrtAccess().getExAssignment_2(), "rule__Sqrt__ExAssignment_2");
					put(grammarAccess.getSinAccess().getBuiltInNameAssignment_0(), "rule__Sin__BuiltInNameAssignment_0");
					put(grammarAccess.getSinAccess().getExAssignment_2(), "rule__Sin__ExAssignment_2");
					put(grammarAccess.getCosAccess().getBuiltInNameAssignment_0(), "rule__Cos__BuiltInNameAssignment_0");
					put(grammarAccess.getCosAccess().getExAssignment_2(), "rule__Cos__ExAssignment_2");
					put(grammarAccess.getTanAccess().getBuiltInNameAssignment_0(), "rule__Tan__BuiltInNameAssignment_0");
					put(grammarAccess.getTanAccess().getExAssignment_2(), "rule__Tan__ExAssignment_2");
					put(grammarAccess.getCotAccess().getBuiltInNameAssignment_0(), "rule__Cot__BuiltInNameAssignment_0");
					put(grammarAccess.getCotAccess().getExAssignment_2(), "rule__Cot__ExAssignment_2");
					put(grammarAccess.getSecAccess().getBuiltInNameAssignment_0(), "rule__Sec__BuiltInNameAssignment_0");
					put(grammarAccess.getSecAccess().getExAssignment_2(), "rule__Sec__ExAssignment_2");
					put(grammarAccess.getCscAccess().getBuiltInNameAssignment_0(), "rule__Csc__BuiltInNameAssignment_0");
					put(grammarAccess.getCscAccess().getExAssignment_2(), "rule__Csc__ExAssignment_2");
					put(grammarAccess.getRoundAccess().getBuiltInNameAssignment_0(), "rule__Round__BuiltInNameAssignment_0");
					put(grammarAccess.getRoundAccess().getExAssignment_2(), "rule__Round__ExAssignment_2");
					put(grammarAccess.getFloorAccess().getBuiltInNameAssignment_0(), "rule__Floor__BuiltInNameAssignment_0");
					put(grammarAccess.getFloorAccess().getExAssignment_2(), "rule__Floor__ExAssignment_2");
					put(grammarAccess.getCeilAccess().getBuiltInNameAssignment_0(), "rule__Ceil__BuiltInNameAssignment_0");
					put(grammarAccess.getCeilAccess().getExAssignment_2(), "rule__Ceil__ExAssignment_2");
					put(grammarAccess.getDivAccess().getBuiltInNameAssignment_0(), "rule__Div__BuiltInNameAssignment_0");
					put(grammarAccess.getDivAccess().getE1Assignment_2(), "rule__Div__E1Assignment_2");
					put(grammarAccess.getDivAccess().getE2Assignment_4(), "rule__Div__E2Assignment_4");
					put(grammarAccess.getFldAccess().getBuiltInNameAssignment_0(), "rule__Fld__BuiltInNameAssignment_0");
					put(grammarAccess.getFldAccess().getE1Assignment_2(), "rule__Fld__E1Assignment_2");
					put(grammarAccess.getFldAccess().getE2Assignment_4(), "rule__Fld__E2Assignment_4");
					put(grammarAccess.getRemAccess().getBuiltInNameAssignment_0(), "rule__Rem__BuiltInNameAssignment_0");
					put(grammarAccess.getRemAccess().getE1Assignment_2(), "rule__Rem__E1Assignment_2");
					put(grammarAccess.getRemAccess().getE2Assignment_4(), "rule__Rem__E2Assignment_4");
					put(grammarAccess.getModAccess().getBuiltInNameAssignment_0(), "rule__Mod__BuiltInNameAssignment_0");
					put(grammarAccess.getModAccess().getE1Assignment_2(), "rule__Mod__E1Assignment_2");
					put(grammarAccess.getModAccess().getE2Assignment_4(), "rule__Mod__E2Assignment_4");
					put(grammarAccess.getGcdAccess().getBuiltInNameAssignment_0(), "rule__Gcd__BuiltInNameAssignment_0");
					put(grammarAccess.getGcdAccess().getE1Assignment_2(), "rule__Gcd__E1Assignment_2");
					put(grammarAccess.getGcdAccess().getE2Assignment_3_1(), "rule__Gcd__E2Assignment_3_1");
					put(grammarAccess.getLcmAccess().getBuiltInNameAssignment_0(), "rule__Lcm__BuiltInNameAssignment_0");
					put(grammarAccess.getLcmAccess().getE1Assignment_2(), "rule__Lcm__E1Assignment_2");
					put(grammarAccess.getLcmAccess().getE2Assignment_3_1(), "rule__Lcm__E2Assignment_3_1");
					put(grammarAccess.getAbsAccess().getBuiltInNameAssignment_0(), "rule__Abs__BuiltInNameAssignment_0");
					put(grammarAccess.getAbsAccess().getExAssignment_2(), "rule__Abs__ExAssignment_2");
					put(grammarAccess.getSignAccess().getBuiltInNameAssignment_0(), "rule__Sign__BuiltInNameAssignment_0");
					put(grammarAccess.getSignAccess().getExAssignment_2(), "rule__Sign__ExAssignment_2");
					put(grammarAccess.getRootAccess().getBuiltInNameAssignment_0(), "rule__Root__BuiltInNameAssignment_0");
					put(grammarAccess.getRootAccess().getE1Assignment_2(), "rule__Root__E1Assignment_2");
					put(grammarAccess.getRootAccess().getE2Assignment_4(), "rule__Root__E2Assignment_4");
					put(grammarAccess.getHypotAccess().getBuiltInNameAssignment_0(), "rule__Hypot__BuiltInNameAssignment_0");
					put(grammarAccess.getHypotAccess().getE1Assignment_2(), "rule__Hypot__E1Assignment_2");
					put(grammarAccess.getHypotAccess().getE2Assignment_4(), "rule__Hypot__E2Assignment_4");
					put(grammarAccess.getPowAccess().getBuiltInNameAssignment_0(), "rule__Pow__BuiltInNameAssignment_0");
					put(grammarAccess.getPowAccess().getE1Assignment_2(), "rule__Pow__E1Assignment_2");
					put(grammarAccess.getPowAccess().getE2Assignment_4(), "rule__Pow__E2Assignment_4");
					put(grammarAccess.getExpAccess().getBuiltInNameAssignment_0(), "rule__Exp__BuiltInNameAssignment_0");
					put(grammarAccess.getExpAccess().getExAssignment_2(), "rule__Exp__ExAssignment_2");
					put(grammarAccess.getLogAccess().getBuiltInNameAssignment_0(), "rule__Log__BuiltInNameAssignment_0");
					put(grammarAccess.getLogAccess().getE1Assignment_2(), "rule__Log__E1Assignment_2");
					put(grammarAccess.getLogAccess().getE2Assignment_3_1(), "rule__Log__E2Assignment_3_1");
					put(grammarAccess.getErfAccess().getBuiltInNameAssignment_0(), "rule__Erf__BuiltInNameAssignment_0");
					put(grammarAccess.getErfAccess().getExAssignment_2(), "rule__Erf__ExAssignment_2");
					put(grammarAccess.getGammaAccess().getBuiltInNameAssignment_0(), "rule__Gamma__BuiltInNameAssignment_0");
					put(grammarAccess.getGammaAccess().getExAssignment_2(), "rule__Gamma__ExAssignment_2");
					put(grammarAccess.getMaxAccess().getBuiltInNameAssignment_0(), "rule__Max__BuiltInNameAssignment_0");
					put(grammarAccess.getMaxAccess().getE1Assignment_2(), "rule__Max__E1Assignment_2");
					put(grammarAccess.getMaxAccess().getE2Assignment_3_1(), "rule__Max__E2Assignment_3_1");
					put(grammarAccess.getMinAccess().getBuiltInNameAssignment_0(), "rule__Min__BuiltInNameAssignment_0");
					put(grammarAccess.getMinAccess().getE1Assignment_2(), "rule__Min__E1Assignment_2");
					put(grammarAccess.getMinAccess().getE2Assignment_3_1(), "rule__Min__E2Assignment_3_1");
					put(grammarAccess.getPauseAccess().getBuiltInNameAssignment_0(), "rule__Pause__BuiltInNameAssignment_0");
					put(grammarAccess.getPauseAccess().getExAssignment_2(), "rule__Pause__ExAssignment_2");
					put(grammarAccess.getSizeAccess().getBuiltInNameAssignment_0(), "rule__Size__BuiltInNameAssignment_0");
					put(grammarAccess.getSizeAccess().getExAssignment_2(), "rule__Size__ExAssignment_2");
					put(grammarAccess.getInvariantBlockAccess().getNameAssignment_0(), "rule__InvariantBlock__NameAssignment_0");
					put(grammarAccess.getInvariantBlockAccess().getConditionsAssignment_2_0(), "rule__InvariantBlock__ConditionsAssignment_2_0");
					put(grammarAccess.getBlockAccess().getBlockstatementAssignment_2(), "rule__Block__BlockstatementAssignment_2");
					put(grammarAccess.getLocalVarDecAccess().getVariablemodiferAssignment_0(), "rule__LocalVarDec__VariablemodiferAssignment_0");
					put(grammarAccess.getLocalVarDecAccess().getTypeAssignment_1(), "rule__LocalVarDec__TypeAssignment_1");
					put(grammarAccess.getLocalVarDecAccess().getDimAssignment_2(), "rule__LocalVarDec__DimAssignment_2");
					put(grammarAccess.getLocalVarDecAccess().getNameAssignment_3(), "rule__LocalVarDec__NameAssignment_3");
					put(grammarAccess.getLocalVarDecAccess().getVariniAssignment_4_1(), "rule__LocalVarDec__VariniAssignment_4_1");
					put(grammarAccess.getStatementAccess().getBlockAssignment_1_0(), "rule__Statement__BlockAssignment_1_0");
					put(grammarAccess.getStatementAccess().getParexpressionAssignment_1_1_1(), "rule__Statement__ParexpressionAssignment_1_1_1");
					put(grammarAccess.getStatementAccess().getIfstatementAssignment_1_1_2(), "rule__Statement__IfstatementAssignment_1_1_2");
					put(grammarAccess.getStatementAccess().getElsestatementAssignment_1_1_3_1(), "rule__Statement__ElsestatementAssignment_1_1_3_1");
					put(grammarAccess.getStatementAccess().getForcontrolAssignment_1_2_2(), "rule__Statement__ForcontrolAssignment_1_2_2");
					put(grammarAccess.getStatementAccess().getForstatementAssignment_1_2_4(), "rule__Statement__ForstatementAssignment_1_2_4");
					put(grammarAccess.getStatementAccess().getIdentifierAssignment_1_3_1(), "rule__Statement__IdentifierAssignment_1_3_1");
					put(grammarAccess.getStatementAccess().getIdentifierAssignment_1_4_1(), "rule__Statement__IdentifierAssignment_1_4_1");
					put(grammarAccess.getStatementAccess().getParexpressionAssignment_1_5_1(), "rule__Statement__ParexpressionAssignment_1_5_1");
					put(grammarAccess.getStatementAccess().getWhilestatementAssignment_1_5_2(), "rule__Statement__WhilestatementAssignment_1_5_2");
					put(grammarAccess.getStatementAccess().getReturnAssignment_1_6(), "rule__Statement__ReturnAssignment_1_6");
					put(grammarAccess.getStatementAccess().getStatementexpressionAssignment_1_7_0(), "rule__Statement__StatementexpressionAssignment_1_7_0");
					put(grammarAccess.getForControlAccess().getEnhancedforcontrolAssignment_1_0(), "rule__ForControl__EnhancedforcontrolAssignment_1_0");
					put(grammarAccess.getForControlAccess().getForinitAssignment_1_1_0(), "rule__ForControl__ForinitAssignment_1_1_0");
					put(grammarAccess.getForControlAccess().getExpressionAssignment_1_1_2(), "rule__ForControl__ExpressionAssignment_1_1_2");
					put(grammarAccess.getForControlAccess().getForupdateAssignment_1_1_4(), "rule__ForControl__ForupdateAssignment_1_1_4");
					put(grammarAccess.getEnhancedForControlAccess().getTypeAssignment_0(), "rule__EnhancedForControl__TypeAssignment_0");
					put(grammarAccess.getEnhancedForControlAccess().getIdAssignment_1(), "rule__EnhancedForControl__IdAssignment_1");
					put(grammarAccess.getEnhancedForControlAccess().getExpressionAssignment_3(), "rule__EnhancedForControl__ExpressionAssignment_3");
					put(grammarAccess.getCompositionMethodAccess().getNameAssignment_1(), "rule__CompositionMethod__NameAssignment_1");
					put(grammarAccess.getCompositionMethodAccess().getMembersAssignment_5(), "rule__CompositionMethod__MembersAssignment_5");
					put(grammarAccess.getControlSwitchCompositionAccess().getIdAssignment_1_0(), "rule__ControlSwitchComposition__IdAssignment_1_0");
					put(grammarAccess.getControlSwitchCompositionAccess().getSyncAssignment_1_1_0_0(), "rule__ControlSwitchComposition__SyncAssignment_1_1_0_0");
					put(grammarAccess.getControlSwitchCompositionAccess().getRecevAssignment_1_1_1(), "rule__ControlSwitchComposition__RecevAssignment_1_1_1");
					put(grammarAccess.getControlSwitchCompositionAccess().getSendAssignment_1_1_2(), "rule__ControlSwitchComposition__SendAssignment_1_1_2");
					put(grammarAccess.getControlSwitchCompositionAccess().getSourceAssignment_1_3_0(), "rule__ControlSwitchComposition__SourceAssignment_1_3_0");
					put(grammarAccess.getControlSwitchCompositionAccess().getSourcelistAssignment_1_3_1_1(), "rule__ControlSwitchComposition__SourcelistAssignment_1_3_1_1");
					put(grammarAccess.getControlSwitchCompositionAccess().getActionAssignment_1_5(), "rule__ControlSwitchComposition__ActionAssignment_1_5");
					put(grammarAccess.getControlSwitchCompositionAccess().getDestinationAssignment_1_7_0(), "rule__ControlSwitchComposition__DestinationAssignment_1_7_0");
					put(grammarAccess.getControlSwitchCompositionAccess().getDestinationlistAssignment_1_7_1_1(), "rule__ControlSwitchComposition__DestinationlistAssignment_1_7_1_1");
					put(grammarAccess.getControlSwitchCompositionAccess().getConditionAssignment_1_10(), "rule__ControlSwitchComposition__ConditionAssignment_1_10");
					put(grammarAccess.getControlSwitchCompositionAccess().getDiscreteAssignment_1_11(), "rule__ControlSwitchComposition__DiscreteAssignment_1_11");
					put(grammarAccess.getDiscreteBlockAccess().getBuiltInNameAssignment_0(), "rule__DiscreteBlock__BuiltInNameAssignment_0");
					put(grammarAccess.getDiscreteBlockAccess().getStatementsAssignment_2(), "rule__DiscreteBlock__StatementsAssignment_2");
					put(grammarAccess.getConditionBlockAccess().getBuiltInNameAssignment_0(), "rule__ConditionBlock__BuiltInNameAssignment_0");
					put(grammarAccess.getConditionBlockAccess().getConditionsAssignment_2_0(), "rule__ConditionBlock__ConditionsAssignment_2_0");
					put(grammarAccess.getDiscreteMethodAccess().getNameAssignment_1(), "rule__DiscreteMethod__NameAssignment_1");
					put(grammarAccess.getDiscreteMethodAccess().getParamsAssignment_3_0(), "rule__DiscreteMethod__ParamsAssignment_3_0");
					put(grammarAccess.getDiscreteMethodAccess().getParamsAssignment_3_1_1(), "rule__DiscreteMethod__ParamsAssignment_3_1_1");
					put(grammarAccess.getDiscreteMethodAccess().getStatementsAssignment_6(), "rule__DiscreteMethod__StatementsAssignment_6");
					put(grammarAccess.getAbstractDiscreteMethodAccess().getNameAssignment_1(), "rule__AbstractDiscreteMethod__NameAssignment_1");
					put(grammarAccess.getAbstractDiscreteMethodAccess().getParamsAssignment_3_0(), "rule__AbstractDiscreteMethod__ParamsAssignment_3_0");
					put(grammarAccess.getAbstractDiscreteMethodAccess().getParamsAssignment_3_1_1(), "rule__AbstractDiscreteMethod__ParamsAssignment_3_1_1");
					put(grammarAccess.getInitMethodAccess().getNameAssignment_1(), "rule__InitMethod__NameAssignment_1");
					put(grammarAccess.getInitMethodAccess().getStatementsAssignment_5(), "rule__InitMethod__StatementsAssignment_5");
					put(grammarAccess.getAbstractInitMethodAccess().getNameAssignment_1(), "rule__AbstractInitMethod__NameAssignment_1");
					put(grammarAccess.getNewByClassAccess().getTypeAssignment_1(), "rule__NewByClass__TypeAssignment_1");
					put(grammarAccess.getNewByClassAccess().getArgsAssignment_3_0(), "rule__NewByClass__ArgsAssignment_3_0");
					put(grammarAccess.getNewByClassAccess().getArgsAssignment_3_1_1(), "rule__NewByClass__ArgsAssignment_3_1_1");
					put(grammarAccess.getNewArrayAccess().getTypeAssignment_1(), "rule__NewArray__TypeAssignment_1");
					put(grammarAccess.getNewArrayAccess().getDimeAssignment_2(), "rule__NewArray__DimeAssignment_2");
					put(grammarAccess.getDimExprAccess().getIndexAssignment_2(), "rule__DimExpr__IndexAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.fofo.ui.contentassist.antlr.internal.InternalApricotParser typedParser = (org.xtext.fofo.ui.contentassist.antlr.internal.InternalApricotParser) parser;
			typedParser.entryRulePackageDeclaration();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public ApricotGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(ApricotGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
