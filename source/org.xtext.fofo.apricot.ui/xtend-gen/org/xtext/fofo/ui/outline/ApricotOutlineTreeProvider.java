/**
 * generated by Xtext
 */
package org.xtext.fofo.ui.outline;

import org.eclipse.xtext.ui.editor.outline.IOutlineNode;
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider;
import org.xtext.fofo.apricot.ConstructorMethod;
import org.xtext.fofo.apricot.ContinuousMethod;
import org.xtext.fofo.apricot.DiscreteBlock;
import org.xtext.fofo.apricot.DiscreteMethod;
import org.xtext.fofo.apricot.Expression;
import org.xtext.fofo.apricot.Field;
import org.xtext.fofo.apricot.InitMethod;
import org.xtext.fofo.apricot.InvariantBlock;
import org.xtext.fofo.apricot.Method;
import org.xtext.fofo.apricot.RequiresAbstractComposition;

/**
 * Customization of the default outline structure.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#outline
 */
@SuppressWarnings("all")
public class ApricotOutlineTreeProvider extends DefaultOutlineTreeProvider {
  protected Object _createNode(final IOutlineNode parentNode, final Expression modelElement) {
    return null;
  }
  
  public boolean _isLeaf(final Method o) {
    return true;
  }
  
  public boolean _isLeaf(final ContinuousMethod o) {
    return true;
  }
  
  public boolean _isLeaf(final Field o) {
    return true;
  }
  
  public boolean _isLeaf(final ConstructorMethod o) {
    return true;
  }
  
  public boolean _isLeaf(final InvariantBlock o) {
    return true;
  }
  
  public boolean _isLeaf(final DiscreteMethod o) {
    return true;
  }
  
  public boolean _isLeaf(final InitMethod o) {
    return true;
  }
  
  public boolean _isLeaf(final DiscreteBlock o) {
    return true;
  }
  
  public boolean _isLeaf(final RequiresAbstractComposition o) {
    return true;
  }
}
